-- MySQL Script generated by MySQL Workbench
-- 05/29/17 18:26:34
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ghana
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ghana
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ghana` DEFAULT CHARACTER SET utf8 ;
USE `ghana` ;

-- -----------------------------------------------------
-- Table `ghana`.`USERS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ghana`.`USERS` (
  `cnic` BIGINT(20) NOT NULL,
  `full_name` VARCHAR(255) NOT NULL,
  `date_of_birth` DATE NOT NULL,
  `phone_number` MEDIUMTEXT NOT NULL,
  `email` TEXT NOT NULL,
  `last_update` DATETIME NOT NULL,
  `created_on` DATETIME NOT NULL,
  PRIMARY KEY (`cnic`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ghana`.`LOGIN`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ghana`.`LOGIN` (
  `login_id` INT NOT NULL,
  `cnic` BIGINT(20) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `current_session_id` TEXT NULL,
  `last_login` DATETIME NOT NULL,
  `last_update` DATETIME NOT NULL,
  `created_on` DATETIME NOT NULL,
  PRIMARY KEY (`login_id`),
  INDEX `users_login_idx` (`cnic` ASC),
  CONSTRAINT `users_login`
    FOREIGN KEY (`cnic`)
    REFERENCES `ghana`.`USERS` (`cnic`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ghana`.`MESSAGE_TYPE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ghana`.`MESSAGE_TYPE` (
  `message_type_id` INT NOT NULL,
  `message_type_name` VARCHAR(45) NOT NULL,
  `created_on` DATETIME NOT NULL,
  `last_update` DATETIME NOT NULL,
  PRIMARY KEY (`message_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ghana`.`MESSAGE_SUBTYPE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ghana`.`MESSAGE_SUBTYPE` (
  `message_subtype_id` INT NOT NULL,
  `message_subtype_name` VARCHAR(45) NOT NULL,
  `last_update` DATETIME NOT NULL,
  `created_on` DATETIME NOT NULL,
  PRIMARY KEY (`message_subtype_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ghana`.`MESSAGE_STATUS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ghana`.`MESSAGE_STATUS` (
  `message_status_id` INT NOT NULL,
  `message_status_name` VARCHAR(45) NOT NULL,
  `created_on` DATETIME NOT NULL,
  `last_update` DATETIME NOT NULL,
  PRIMARY KEY (`message_status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ghana`.`MESSAGES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ghana`.`MESSAGES` (
  `message_id` INT NOT NULL,
  `sender_user_id` BIGINT(20) NOT NULL,
  `receiver_user_id` BIGINT(20) NOT NULL,
  `message_type_id` INT NULL,
  `message_subtype_id` INT NULL,
  `message_category` TEXT NULL,
  `message_body` BLOB NULL,
  `sent_at` DATETIME NULL,
  `received_at` DATETIME NULL,
  `delete_status` TINYINT(1) NULL,
  `message_status_id` INT NULL,
  PRIMARY KEY (`message_id`),
  INDEX `message_type_idx` (`message_type_id` ASC),
  INDEX `message_subtype_idx` (`message_subtype_id` ASC),
  INDEX `message_status_idx` (`message_status_id` ASC),
  INDEX `sender_user_idx` (`sender_user_id` ASC),
  INDEX `receiver_details_user_idx` (`receiver_user_id` ASC),
  CONSTRAINT `message_type`
    FOREIGN KEY (`message_type_id`)
    REFERENCES `ghana`.`MESSAGE_TYPE` (`message_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `message_subtype`
    FOREIGN KEY (`message_subtype_id`)
    REFERENCES `ghana`.`MESSAGE_SUBTYPE` (`message_subtype_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `message_status`
    FOREIGN KEY (`message_status_id`)
    REFERENCES `ghana`.`MESSAGE_STATUS` (`message_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `sender_details_user`
    FOREIGN KEY (`sender_user_id`)
    REFERENCES `ghana`.`USERS` (`cnic`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `receiver_details_user`
    FOREIGN KEY (`receiver_user_id`)
    REFERENCES `ghana`.`USERS` (`cnic`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ghana`.`DISPATCH_STATUS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ghana`.`DISPATCH_STATUS` (
  `dispatch_status_id` INT NOT NULL,
  `dispatch_status_name` VARCHAR(45) NOT NULL,
  `created_on` DATETIME NOT NULL,
  `last_update` DATETIME NOT NULL,
  PRIMARY KEY (`dispatch_status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ghana`.`EVENTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ghana`.`EVENTS` (
  `event_id` INT NOT NULL,
  `event_title` TEXT NOT NULL,
  `event_excerpt` TEXT NOT NULL,
  `event_body` TEXT NOT NULL,
  `last_update` DATETIME NOT NULL,
  `created_on` DATETIME NOT NULL,
  `dispatch_status_id` INT NOT NULL,
  `event_user_id` BIGINT(20) NOT NULL,
  PRIMARY KEY (`event_id`),
  INDEX `dispatch_status_idx` (`dispatch_status_id` ASC),
  INDEX `event_user_idx` (`event_user_id` ASC),
  CONSTRAINT `dispatch_status`
    FOREIGN KEY (`dispatch_status_id`)
    REFERENCES `ghana`.`DISPATCH_STATUS` (`dispatch_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `event_user`
    FOREIGN KEY (`event_user_id`)
    REFERENCES `ghana`.`LOGIN` (`cnic`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
